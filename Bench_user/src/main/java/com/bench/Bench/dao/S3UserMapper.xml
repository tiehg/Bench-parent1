<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bench.Bench.dao.S3UserMapper">
  <resultMap id="BaseResultMap" type="com.bench.bean.S3User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="ulevel" jdbcType="INTEGER" property="ulevel" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="urich" jdbcType="VARCHAR" property="urich" />
    <result column="uhead" jdbcType="VARCHAR" property="uhead" />
    <result column="uviplevel" jdbcType="VARCHAR" property="uviplevel" />
    <result column="usex" jdbcType="VARCHAR" property="usex" />
    <result column="certificaInfo" jdbcType="VARCHAR" property="certificainfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, email, address, pwd, phone, ulevel, regtime, signature, urich, uhead, 
    uviplevel, usex, certificaInfo
  </sql>
  <select id="selectByExample" parameterType="com.bench.bean.S3UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s3_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s3_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s3_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bench.bean.S3UserExample">
    delete from s3_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bench.bean.S3User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into s3_user (account, email, address, 
      pwd, phone, ulevel, 
      regtime, signature, urich, 
      uhead, uviplevel, usex, 
      certificaInfo)
    values (#{account,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{ulevel,jdbcType=INTEGER}, 
      #{regtime,jdbcType=TIMESTAMP}, #{signature,jdbcType=VARCHAR}, #{urich,jdbcType=VARCHAR}, 
      #{uhead,jdbcType=VARCHAR}, #{uviplevel,jdbcType=VARCHAR}, #{usex,jdbcType=VARCHAR}, 
      #{certificainfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bench.bean.S3User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into s3_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="ulevel != null">
        ulevel,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="urich != null">
        urich,
      </if>
      <if test="uhead != null">
        uhead,
      </if>
      <if test="uviplevel != null">
        uviplevel,
      </if>
      <if test="usex != null">
        usex,
      </if>
      <if test="certificainfo != null">
        certificaInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ulevel != null">
        #{ulevel,jdbcType=INTEGER},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="urich != null">
        #{urich,jdbcType=VARCHAR},
      </if>
      <if test="uhead != null">
        #{uhead,jdbcType=VARCHAR},
      </if>
      <if test="uviplevel != null">
        #{uviplevel,jdbcType=VARCHAR},
      </if>
      <if test="usex != null">
        #{usex,jdbcType=VARCHAR},
      </if>
      <if test="certificainfo != null">
        #{certificainfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bench.bean.S3UserExample" resultType="java.lang.Long">
    select count(*) from s3_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s3_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.ulevel != null">
        ulevel = #{record.ulevel,jdbcType=INTEGER},
      </if>
      <if test="record.regtime != null">
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.urich != null">
        urich = #{record.urich,jdbcType=VARCHAR},
      </if>
      <if test="record.uhead != null">
        uhead = #{record.uhead,jdbcType=VARCHAR},
      </if>
      <if test="record.uviplevel != null">
        uviplevel = #{record.uviplevel,jdbcType=VARCHAR},
      </if>
      <if test="record.usex != null">
        usex = #{record.usex,jdbcType=VARCHAR},
      </if>
      <if test="record.certificainfo != null">
        certificaInfo = #{record.certificainfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s3_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      ulevel = #{record.ulevel,jdbcType=INTEGER},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      signature = #{record.signature,jdbcType=VARCHAR},
      urich = #{record.urich,jdbcType=VARCHAR},
      uhead = #{record.uhead,jdbcType=VARCHAR},
      uviplevel = #{record.uviplevel,jdbcType=VARCHAR},
      usex = #{record.usex,jdbcType=VARCHAR},
      certificaInfo = #{record.certificainfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bench.bean.S3User">
    update s3_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="ulevel != null">
        ulevel = #{ulevel,jdbcType=INTEGER},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="urich != null">
        urich = #{urich,jdbcType=VARCHAR},
      </if>
      <if test="uhead != null">
        uhead = #{uhead,jdbcType=VARCHAR},
      </if>
      <if test="uviplevel != null">
        uviplevel = #{uviplevel,jdbcType=VARCHAR},
      </if>
      <if test="usex != null">
        usex = #{usex,jdbcType=VARCHAR},
      </if>
      <if test="certificainfo != null">
        certificaInfo = #{certificainfo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bench.bean.S3User">
    update s3_user
    set account = #{account,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      ulevel = #{ulevel,jdbcType=INTEGER},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      signature = #{signature,jdbcType=VARCHAR},
      urich = #{urich,jdbcType=VARCHAR},
      uhead = #{uhead,jdbcType=VARCHAR},
      uviplevel = #{uviplevel,jdbcType=VARCHAR},
      usex = #{usex,jdbcType=VARCHAR},
      certificaInfo = #{certificainfo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>